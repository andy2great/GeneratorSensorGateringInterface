{"version":3,"sources":["constants/senseurs.constants.ts","constants/server.constants.ts","components/summary/summary.service.ts","components/summary/summary.component.js","components/details/details.component.js","components/module-content/module-content.component.js","App.js","index.js"],"names":["SENSEURS_TYPE","SERVER_NAME","summaryService","getLastValue","fetch","then","res","json","Summary","props","useState","tableData","setTableData","useEffect","console","log","refreshData","rows","Set","map","data","location","forEach","row","modeOpr","NaN","temp","hum","co","lpg","autre","temps","filter","x","time","Date","timestamp","getHours","getMinutes","getSeconds","senseur","MOD_PERATION","val","TEMPERATURE","HUMIDITE","CO","LPG","push","className","Button","css","color","variant","onClick","height","tableStyle","width","selectable","showRowHover","columns","key","label","showCheckboxes","onCellClick","column","event","handler","showFooterToolbar","Details","ModuleContent","module","setModule","handleModuleClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAYA,E,qFCECC,EAAW,4BADG,OCQZC,EAPQ,CACnBC,aAAc,WACV,OAAOC,MAAMH,EAAc,kBACtBI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,a,SFLjBP,O,+BAAAA,I,6BAAAA,I,uBAAAA,I,WAAAA,I,aAAAA,I,qBAAAA,I,qBAAAA,I,0BAAAA,M,gBGWCQ,EAAU,SAACC,GAAW,IAAD,EACIC,mBAAS,IADb,mBACvBC,EADuB,KACZC,EADY,KAI9BC,qBAAU,WACNC,QAAQC,IAAI,SACZC,MACD,IAEH,IAAMA,EAAc,WAChBd,EAAeC,eACVE,MAAK,SAAAC,GACF,IAAMW,EAAO,GACK,IAAIC,IAAIZ,EAAIa,KAAI,SAAAC,GAC9B,OAAOA,EAAKC,aAGNC,SAAQ,SAAAD,GACd,IAAME,EAAM,CACRF,SAAUA,EACVG,QAASC,IACTC,KAAMD,IACNE,IAAKF,IACLG,GAAIH,IACJI,IAAKJ,IACLK,OAAO,EACPC,MAAON,KAGMnB,EAAI0B,QAAO,SAAAC,GACxB,OAAOA,EAAEZ,WAAaA,KAGjBC,SAAQ,SAAAW,GACb,IAAMC,EAAO,IAAIC,KAAKF,EAAEG,WAExB,OADAb,EAAIQ,OAASR,EAAIQ,OAAL,UAAiBG,EAAKG,WAAtB,YAAoCH,EAAKI,aAAzC,YAAyDJ,EAAKK,cACnEN,EAAEO,SACL,KAAKxC,EAAcyC,aACflB,EAAIC,QAAUS,EAAES,IAChB,MACJ,KAAK1C,EAAc2C,YACfpB,EAAIG,KAAOO,EAAES,IACb,MACJ,KAAK1C,EAAc4C,SACfrB,EAAII,IAAMM,EAAES,IACZ,MACJ,KAAK1C,EAAc6C,GACftB,EAAIK,GAAKK,EAAES,IACX,MACJ,KAAK1C,EAAc8C,IACfvB,EAAIM,IAAMI,EAAES,IACZ,MACJ,QACInB,EAAIO,OAAQ,MAIxBb,EAAK8B,KAAKxB,MAEdX,EAAaK,OAuCzB,OACI,sBAAK+B,UAAU,kBAAf,UACI,mBAAGA,UAAU,gBAAb,sBACA,cAACC,EAAA,EAAD,CACIC,IAAI,SACJC,MAAM,UACNC,QAAQ,YACRC,QAAS,kBAAMrC,KAJnB,wBAQA,cAAC,IAAD,UACI,cAAC,aAAD,CACIsC,OAAQ,OACRC,WAAY,CAACC,MAAO,OACpBC,YAAY,EACZC,cAAc,EACdC,QA7CM,CAClB,CACIC,IAAK,WACLC,MAAO,UACR,CACCD,IAAK,UACLC,MAAO,QACP,CACAD,IAAK,OACLC,MAAO,QACR,CACCD,IAAK,MACLC,MAAO,OACR,CACCD,IAAK,KACLC,MAAO,MACR,CACCD,IAAK,MACLC,MAAO,OACR,CACCD,IAAK,QACLC,MAAO,SACR,CACCD,IAAK,QACLC,MAAO,UAsBCzC,KAAMT,EACNmD,gBAAgB,EAChBC,YAvDQ,SAACxC,EAAKyC,EAAQC,GACnB,IAAXD,GACAvD,EAAMyD,QAAQD,IAsDNE,mBAAmB,UC9H1BC,G,OAAU,SAAC3D,GAEpB,OACI,sBAAKuC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,CACIC,IAAI,SACJC,MAAM,UACNC,QAAQ,YACRC,QAAS,kBAAM5C,EAAMyD,QAAQ,OAJjC,oBADJ,YAUI,qBAAKlB,UAAU,SAAf,gCCZCqB,EAAgB,WAAO,IAAD,EACH3D,qBADG,mBACxB4D,EADwB,KAChBC,EADgB,KAGzBC,EAAoB,SAACF,GACvBC,EAAUD,IAGd,OACI,8BACKA,EACI,cAAC,EAAD,CAASJ,QAASM,IAClB,cAAC,EAAD,CAASN,QAASM,OCLpBC,MARf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,cAAC,EAAD,OCFN0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.37a0dbfa.chunk.js","sourcesContent":["export enum SENSEURS_TYPE {\r\n    MOD_PERATION = 0,\r\n    TEMPERATURE = 1,\r\n    HUMIDITE = 2,\r\n    CO = 3,\r\n    LPG = 4,\r\n    DECIBEL = 5,\r\n    COURANT = 6,\r\n    VIBRATION = 7,\r\n};","\r\nexport const SERVER_PORT = 59595;\r\nexport const SERVER_NAME = `http://10.0.0.116:${SERVER_PORT}`;","import { SERVER_NAME } from '../../constants/server.constants';\r\n\r\nconst summaryService = {\r\n    getLastValue: () => {\r\n        return fetch(SERVER_NAME + '/senseurs/last')\r\n            .then(res => res.json());\r\n    }\r\n}\r\n\r\nexport default summaryService;","\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { DataTables } from 'material-ui-datatables';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport { Button } from '@material-ui/core';\r\nimport summaryService from './summary.service';\r\nimport { SENSEURS_TYPE } from '../../constants/senseurs.constants';\r\n\r\nimport './summary.style.css';\r\n\r\nexport const Summary = (props) => {\r\n    const [tableData, setTableData] = useState([]);\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(() => {\r\n        console.log('tests')\r\n        refreshData();\r\n    }, []);\r\n\r\n    const refreshData = () => {\r\n        summaryService.getLastValue()\r\n            .then(res => {\r\n                const rows = [];\r\n                const locations = new Set(res.map(data => {\r\n                    return data.location;\r\n                }));\r\n                \r\n                locations.forEach(location => {\r\n                    const row = {\r\n                        location: location,\r\n                        modeOpr: NaN,\r\n                        temp: NaN,\r\n                        hum: NaN,\r\n                        co: NaN,\r\n                        lpg: NaN,\r\n                        autre: true,\r\n                        temps: NaN,\r\n                    }\r\n\r\n                    const senseurs = res.filter(x => {\r\n                        return x.location === location;\r\n                    });\r\n\r\n                    senseurs.forEach(x => {\r\n                        const time = new Date(x.timestamp);\r\n                        row.temps = !row.temps && `${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`;\r\n                        switch(x.senseur) {\r\n                            case SENSEURS_TYPE.MOD_PERATION:\r\n                                row.modeOpr = x.val;\r\n                                break;\r\n                            case SENSEURS_TYPE.TEMPERATURE:\r\n                                row.temp = x.val;\r\n                                break;\r\n                            case SENSEURS_TYPE.HUMIDITE:\r\n                                row.hum = x.val;\r\n                                break;\r\n                            case SENSEURS_TYPE.CO:\r\n                                row.co = x.val;\r\n                                break;\r\n                            case SENSEURS_TYPE.LPG:\r\n                                row.lpg = x.val;\r\n                                break;\r\n                            default:\r\n                                row.autre = true;\r\n                        }\r\n                    });\r\n                    \r\n                    rows.push(row);\r\n                })\r\n                setTableData(rows);\r\n            });\r\n    } \r\n\r\n    const handleCellClick = (row, column, event) => {\r\n        if (column === 0) {\r\n            props.handler(event)\r\n        }\r\n    }\r\n\r\n    \r\n    const TABLE_COLUMNS = [\r\n        {\r\n            key: 'location',\r\n            label: 'Module',\r\n        }, {\r\n            key: 'modeOpr',\r\n            label: 'Act.',\r\n        },  {\r\n            key: 'temp',\r\n            label: 'Temp',\r\n        }, {\r\n            key: 'hum',\r\n            label: 'Hum',\r\n        }, {\r\n            key: 'co',\r\n            label: 'CO',\r\n        }, {\r\n            key: 'lpg',\r\n            label: 'LPG',\r\n        }, {\r\n            key: 'autre',\r\n            label: 'Autre',\r\n        }, {\r\n            key: 'temps',\r\n            label: 'Temps',\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className='summary-content'>\r\n            <p className='summary-title'>Sommaire</p>\r\n            <Button \r\n                css='button'\r\n                color='primary'\r\n                variant='contained'\r\n                onClick={() => refreshData()}\r\n            >\r\n                Rafraichir\r\n            </Button>\r\n            <MuiThemeProvider>\r\n                <DataTables\r\n                    height={'auto'}\r\n                    tableStyle={{width: '90%', }}\r\n                    selectable={false}\r\n                    showRowHover={true}\r\n                    columns={TABLE_COLUMNS}\r\n                    data={tableData}\r\n                    showCheckboxes={false}\r\n                    onCellClick={handleCellClick}\r\n                    showFooterToolbar={false}\r\n                />\r\n            </MuiThemeProvider>\r\n        </div>\r\n    );\r\n}","import './details.style.css';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport const Details = (props) => {\r\n\r\n    return (\r\n        <div className='parent'>\r\n            <Button \r\n                css='button'\r\n                color='primary'\r\n                variant='contained'\r\n                onClick={() => props.handler(null)}\r\n            >\r\n                Retour\r\n            </Button>\r\n            allo papa\r\n            <div className='enfant'>\r\n                comment ca va\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nimport { Summary } from '../summary/summary.component';\r\nimport { Details } from '../details/details.component';\r\n\r\nexport const ModuleContent = () => {\r\n    const [module, setModule] = useState();\r\n\r\n    const handleModuleClick = (module) => {\r\n        setModule(module);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {module ?\r\n                (<Details handler={handleModuleClick}></Details>) :\r\n                (<Summary handler={handleModuleClick}></Summary>)\r\n            }\r\n        </div>\r\n    )\r\n}","\nimport { ModuleContent } from './components/module-content/module-content.component'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ModuleContent></ModuleContent>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}