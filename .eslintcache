[{"C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\index.js":"1","C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\App.js":"2","C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\reportWebVitals.js":"3","C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\components\\summary\\summary.component.js":"4","C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\components\\summary\\summary.service.ts":"5","C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\constants\\server.constants.ts":"6","C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\constants\\senseurs.constants.ts":"7","C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\components\\module-content\\module-content.component.js":"8","C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\components\\details\\details.component.js":"9"},{"size":146,"mtime":1613866552195,"results":"10","hashOfConfig":"11"},{"size":352,"mtime":1613866551519,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610829268364,"results":"13","hashOfConfig":"14"},{"size":4950,"mtime":1613866394628,"results":"15","hashOfConfig":"11"},{"size":1552,"mtime":1613866562153,"results":"16","hashOfConfig":"11"},{"size":99,"mtime":1612643984772,"results":"17","hashOfConfig":"11"},{"size":163,"mtime":1613866550124,"results":"18","hashOfConfig":"11"},{"size":519,"mtime":1613866547080,"results":"19","hashOfConfig":"11"},{"size":427,"mtime":1613866545878,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k2psmi",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6tnnwh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\index.js",[],"C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\App.js",[],"C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\reportWebVitals.js",[],"C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\components\\summary\\summary.component.js",["42","43"],"import React, { useState, useEffect } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nimport { DataTables } from \"material-ui-datatables\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport summaryService from \"./summary.service\";\r\nimport { SENSEURS_TYPE } from \"../../constants/senseurs.constants\";\r\n\r\nimport \"./summary.style.css\";\r\n\r\nexport const Summary = (props) => {\r\n  const [tableData, setTableData] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [chartOptions, setChartOptions] = useState({});\r\n  const [chartType, setChartType] = useState(SENSEURS_TYPE.TEMPERATURE);\r\n\r\n  // Similar to componentDidMount and componentDidUpdate:\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    refreshChart();\r\n  }, [chartData, chartType]);\r\n\r\n  const refreshData = () => {\r\n    summaryService.getLastValue().then((res) => {\r\n      const rows = [];\r\n      const locations = new Set(\r\n        res.map((data) => {\r\n          return data.location;\r\n        })\r\n      );\r\n\r\n      locations.forEach((location) => {\r\n        const row = {\r\n          location: location,\r\n          modeOpr: \"NaN\",\r\n          temp: \"NaN\",\r\n          hum: \"NaN\",\r\n          co: \"NaN\",\r\n          lpg: \"NaN\",\r\n          autre: true,\r\n          temps: NaN,\r\n        };\r\n\r\n        const senseurs = res.filter((x) => {\r\n          return x.location === location;\r\n        });\r\n\r\n        senseurs.forEach((x) => {\r\n          const time = new Date(x.timestamp);\r\n          row.temps =\r\n            !row.temps &&\r\n            `${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`;\r\n\r\n          const senseurInfo = summaryService.getSensorInfo(x.senseur);\r\n          row[`${senseurInfo.type}`] = x.val;\r\n        });\r\n\r\n        rows.push(row);\r\n      });\r\n      setTableData(rows);\r\n    });\r\n\r\n    summaryService.getGlobalChartValues().then((res) => {\r\n      setChartData(res);\r\n      refreshChart();\r\n    });\r\n  };\r\n\r\n  const refreshChart = () => {\r\n    let minY = 0;\r\n    let maxY = 0;\r\n    let minX = 0;\r\n    let maxX = 0;\r\n    const senseurInfo = summaryService.getSensorInfo(chartType);\r\n\r\n    const data = chartData\r\n      .filter((x) => x._id.senseur === chartType)\r\n      .map((x) => ({\r\n        name: x._id.location,\r\n        data: x.val.map((y) => {\r\n          const time = new Date(y.timestamp).getTime();\r\n\r\n          if (!minY || minY > y.val) minY = y.val;\r\n          if (!maxY || maxY < y.val) maxY = y.val;\r\n          if (!minX || minX > time) minX = time;\r\n          if (!maxX || maxX < time) maxX = time;\r\n\r\n          return {\r\n            x: time,\r\n            y: y.val,\r\n          };\r\n        }),\r\n      }));\r\n\r\n    setChartOptions({\r\n      chart: {\r\n        type: \"line\",\r\n        zoomType: \"x\",\r\n      },\r\n      title: {\r\n        text: senseurInfo.name,\r\n      },\r\n      xAxis: {\r\n        type: \"datetime\",\r\n        max: maxX + 20000000,\r\n        min: minX - 10000000,\r\n      },\r\n      yAxis: {\r\n        min: minY - 10,\r\n        max: maxY + 10,\r\n        title: {\r\n          text: `${senseurInfo.name} ${\r\n            senseurInfo.symbole ? \"(\" + senseurInfo.symbole + \")\" : \"\"\r\n          }`,\r\n        },\r\n      },\r\n      plotOptions: {\r\n        series: {\r\n          turboThreshold: 0,\r\n        },\r\n      },\r\n      series: data.map((x) => ({\r\n        name: x.name,\r\n        data: x.data,\r\n      })),\r\n    });\r\n  };\r\n\r\n  const handleCellClick = (row, column, event) => {\r\n    if (column === 0) {\r\n      props.handler(event);\r\n    }\r\n    setChartType(column - 1);\r\n  };\r\n\r\n  const TABLE_COLUMNS = [\r\n    {\r\n      key: \"location\",\r\n      label: \"Module\",\r\n    },\r\n    {\r\n      key: \"modeOpr\",\r\n      label: \"Act.\",\r\n    },\r\n    {\r\n      key: \"temp\",\r\n      label: \"Temp\",\r\n    },\r\n    {\r\n      key: \"hum\",\r\n      label: \"Hum\",\r\n    },\r\n    {\r\n      key: \"co\",\r\n      label: \"CO\",\r\n    },\r\n    {\r\n      key: \"lpg\",\r\n      label: \"LPG\",\r\n    },\r\n    {\r\n      key: \"autre\",\r\n      label: \"Autre\",\r\n    },\r\n    {\r\n      key: \"temps\",\r\n      label: \"Temps\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"summary-content\">\r\n      <p className=\"summary-title\">Sommaire</p>\r\n      <Button\r\n        css=\"button\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        onClick={() => refreshData()}\r\n      >\r\n        Rafraichir\r\n      </Button>\r\n      <div className=\"summary-info\">\r\n        <MuiThemeProvider>\r\n          <DataTables\r\n            height={\"auto\"}\r\n            selectable={false}\r\n            showRowHover={true}\r\n            columns={TABLE_COLUMNS}\r\n            data={tableData}\r\n            showCheckboxes={false}\r\n            onCellClick={handleCellClick}\r\n            showFooterToolbar={false}\r\n          />\r\n        </MuiThemeProvider>\r\n\r\n        <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",["44","45"],"C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\components\\summary\\summary.service.ts",[],"C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\constants\\server.constants.ts",[],["46","47"],"C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\constants\\senseurs.constants.ts",[],"C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\components\\module-content\\module-content.component.js",[],"C:\\Users\\andy2\\OneDrive\\Documents\\GeneratorSensorGateringInterface\\generator-sensor-gatering-interface\\src\\components\\details\\details.component.js",[],{"ruleId":"48","severity":1,"message":"49","line":22,"column":6,"nodeType":"50","endLine":22,"endColumn":8,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":26,"column":6,"nodeType":"50","endLine":26,"endColumn":28,"suggestions":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshData'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has a missing dependency: 'refreshChart'. Either include it or remove the dependency array.",["61"],"no-native-reassign",["62"],"no-negated-in-lhs",["63"],["62"],["63"],{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [refreshData]",{"range":"68","text":"69"},"Update the dependencies array to be: [chartData, chartType, refreshChart]",{"range":"70","text":"71"},[849,851],"[refreshData]",[904,926],"[chartData, chartType, refreshChart]"]